{"version":3,"sources":["AnilistClient.tsx","queries/queries.tsx","components/logo/Logo.tsx","components/layout/DefaultLayout.tsx","components/spin/FullScreenSpin.tsx","components/card/SimpleCard.tsx","modules/AnimationList.tsx","pages/home/Home.tsx","pages/detail/Detail.tsx","App.tsx","index.tsx"],"names":["client","ApolloClient","uri","ANIMATION_LIST","gql","Logo","className","this","props","style","width","color","fontSize","Component","Header","Layout","Content","Sider","Search","Input","DefaultLayout","placeholder","onSearch","children","FullScreenSpin","display","alignItems","justifyContent","height","size","tip","SimpleCard","id","title","coverImage","genres","Meta","Card","to","hoverable","margin","cover","alt","src","description","join","substr","Option","Select","AnimationList","page","pageSize","sort","search","onPageChange","onSortChange","sortString","useQuery","variables","perPage","undefined","loading","error","data","pageInfo","Page","render","media","map","key","romaji","large","padding","marginBottom","total","marginLeft","showSizeChanger","onShowSizeChange","defaultCurrent","defaultPageSize","onChange","float","defaultValue","value","clear","marginTop","Home","current","state","setState","Detail","match","params","App","exact","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7226cce8.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n    uri: 'https://graphql.anilist.co'\n});\n\nexport default client;\n","import gql from \"graphql-tag\";\n\nexport const ANIMATION_LIST = gql`\n    query ($page: Int, $perPage: Int, $isAdult: Boolean, $sort: MediaSort, $search: String){\n        Page(page:$page, perPage:$perPage) {\n            pageInfo{\n                total,\n                perPage,\n                currentPage,\n                lastPage,\n                hasNextPage\n            },\n            media(isAdult: $isAdult, sort: [$sort], search: $search) {\n                id\n                title{\n                    romaji\n                    english\n                    native\n                },\n                coverImage{\n                    extraLarge,\n                    large,\n                    medium\n                },\n                genres\n            }\n        }\n    }\n`;\n","import React, {Component} from \"react\";\n\nclass Logo extends Component<{className?: string}> {\n    render() {\n        return (\n            <div className={this.props.className || ''} style={{\n                width: '200px',\n                color: 'white',\n                fontSize: '2em'\n            }}>Anilist</div>\n        );\n    }\n};\n\nexport default Logo;\n","import React, {Component} from \"react\";\nimport {Layout, Input} from 'antd';\nimport {Logo} from \"../logo\";\nimport './DefaultLayout.scss';\n\nconst {Header, Content, Sider} = Layout;\nconst { Search } = Input;\ntype Props = {\n    onSearch?: (value: string) => void;\n};\n\nclass DefaultLayout extends Component<Props> {\n    render() {\n        return (\n            <Layout className=\"default-layout\">\n                <Header className=\"default-header\">\n                    <Logo className=\"logo\" />\n                    <Search\n                        className=\"search\"\n                        placeholder=\"input search text\"\n                        onSearch={this.props.onSearch} />\n                </Header>\n                <Layout className=\"default-content-layout\">\n                    <Sider className=\"default-sidebar\">\n                        Filter\n                    </Sider>\n                    <Content className=\"default-content\">\n                        <div>{this.props.children}</div>\n                    </Content>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport {Spin} from \"antd\";\n\nconst FullScreenSpin = () => {\n    return (<div style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"100%\"\n    }}>\n        <Spin size={\"large\"} tip={\"loading...\"} />\n    </div>)\n};\n\nexport default FullScreenSpin;\n","import React from \"react\";\nimport {Card} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nconst SimpleCard = ({id, title, coverImage, genres}: any) => {\n    const {Meta} = Card;\n\n    return <Link to={`/details/${id}`}>\n        <Card hoverable\n              style={{width: 240, display: \"inline-block\", margin: 10}}\n              cover={<img style={{width: 240, height: 340}} alt={title} src={coverImage} />}>\n            <Meta title={title} description={genres.join(' / ').substr(0, 25)} />\n        </Card>\n    </Link>\n};\n\nexport default SimpleCard;\n","import React from \"react\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {ANIMATION_LIST} from \"../queries/queries\";\nimport {DefaultLayout} from \"../components/layout\";\nimport {FullScreenSpin} from \"../components/spin\";\nimport {SimpleCard} from \"../components/card\";\nimport {Pagination, Select} from \"antd\";\nconst {Option} = Select;\n\ntype Props = {\n    page: number;\n    pageSize: number;\n    sort?: string;\n    search?: string;\n    onPageChange: (page: number, pageSize?: number) => void;\n    onSortChange: (sort: string) => void;\n    onSearch: (value: string) => void;\n}\n\nconst AnimationList = ({page, pageSize, sort, search, onPageChange, onSortChange, onSearch}: Props) => {\n    const sortString = sort || 'TRENDING_DESC';\n    const { loading, error, data } = useQuery(ANIMATION_LIST, {\n        variables: {\n            page: page,\n            perPage: pageSize,\n            sort: sortString,\n            search: search || undefined\n        }\n    });\n\n    if (loading) return <DefaultLayout><FullScreenSpin/></DefaultLayout>;\n    if (error) return <DefaultLayout onSearch={onSearch}><p>Error :(</p></DefaultLayout>;\n\n    const pageInfo: any = data.Page.pageInfo;\n    const mediaList: Array<any> = data.Page.media;\n\n    const render = mediaList.map(media => (\n        <SimpleCard key={media.id}\n                    id={media.id}\n                    title={media.title.romaji}\n                    coverImage={media.coverImage.large}\n                    genres={media.genres}\n        />\n    ));\n\n    return <DefaultLayout onSearch={onSearch}>\n        <div style={{padding: 10, fontSize: '1.5em', marginBottom: 10}}>Total of {pageInfo.total}</div>\n        <div style={{marginBottom: 10, marginLeft: 10}}>\n            <Pagination\n                showSizeChanger\n                onShowSizeChange={onPageChange}\n                defaultCurrent={page}\n                defaultPageSize={pageSize}\n                onChange={onPageChange}\n                total={pageInfo.total}\n                style={{float: \"left\"}}\n            />\n            <Select defaultValue={sortString} style={{ width: 160, float: \"right\" }} onChange={onSortChange}>\n                <Option value=\"TRENDING_DESC\">Trending</Option>\n                <Option value=\"FAVOURITES_DESC\">Favourites</Option>\n                <Option value=\"SCORE_DESC\">Score</Option>\n                <Option value=\"START_DATE_DESC\">Start date</Option>\n            </Select>\n        </div>\n        <div style={{clear:\"both\"}} />\n        {render}\n        <div style={{marginTop: 10, marginLeft: 10}}>\n            <Pagination\n                showSizeChanger\n                onShowSizeChange={onPageChange}\n                defaultCurrent={page}\n                defaultPageSize={pageSize}\n                onChange={onPageChange}\n                total={pageInfo.total}\n            />\n        </div>\n    </DefaultLayout>;\n};\n\nexport default AnimationList;\n","import React, {Component} from 'react';\nimport {AnimationList} from \"../../modules\";\n\ntype Props = {};\ntype State = {\n    page: number;\n    pageSize: number;\n    sort?: string;\n    search?: string;\n}\n\nclass Home extends Component<Props, State> {\n    constructor(props: Readonly<Props>) {\n        super(props);\n        this.state = {\n            page: 1,\n            pageSize: 10\n        };\n    }\n\n    onPageChange = (current: number, pageSize: number = this.state.pageSize) => {\n        this.setState({\n            page: current,\n            pageSize: pageSize\n        });\n    };\n\n    onSortChange = (sort: string) => {\n        this.setState({\n            sort: sort\n        });\n    };\n\n    onSearch = (value: string) => {\n        this.setState({\n            page: 1,\n            search: value\n        });\n    };\n\n    render() {\n        return <AnimationList\n            page={this.state.page}\n            pageSize={this.state.pageSize}\n            sort={this.state.sort}\n            search={this.state.search}\n            onPageChange={this.onPageChange}\n            onSortChange={this.onSortChange}\n            onSearch={this.onSearch}\n        />\n    }\n}\n\nexport default Home;\n","import React, {Component} from 'react';\n\nclass Detail extends Component<any, any> {\n    render() {\n        const {match} = this.props;\n        const id = match.params.id;\n\n        return (\n            <div>Detail : {id}</div>\n        );\n    }\n}\n\nexport default Detail;\n","import React from 'react';\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport {Route, HashRouter} from 'react-router-dom';\nimport client from './AnilistClient';\nimport {Home} from \"./pages/home\";\nimport {Detail} from \"./pages/detail\";\nimport 'antd/dist/antd.css';\n\nconst App: React.FC = () => {\n    return (\n        <ApolloProvider client={client}>\n            <HashRouter>\n                <Route exact={true} path={\"/\"} component={Home} />\n                <Route path={\"/details/:id\"} component={Detail} />\n            </HashRouter>\n        </ApolloProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}